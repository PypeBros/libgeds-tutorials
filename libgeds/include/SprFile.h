#ifndef __SPR_FILE_H
#define __SPR_FILE_H

#define SPR_FILE_CMAP_MAGIC 0x50414d43 // color map
#define SPR_FILE_TILE_MAGIC 0x454c4954 // tiles data
#define SPR_FILE_BLCK_MAGIC 0x4B434c42 // one tiles-to-sheet mapping
#define SPR_FILE_TMAP_MAGIC 0x50414d54 // tiles-to-map layout
#define SPR_FILE_FREE_MAGIC 0x45455246 // free tiles hints
#define MAGIC_PRINT(m) (char)(m)&255, (char)((m)>>8)&255, (char)((m)>>16)&255, (char)((m)>>24)&255

/** header for a tile map, in LEDS or compound TILE+MAP files generated by imlib2spr.
 *  data contains 16-bit values to store in a DS map
 **/
struct SprFileTmap {
  u32 magic;
  u32 skipsize;
  u16 width;
  u16 height;
};

/** header list of colors, 
 *  data contains 16-bit RGB 555 values, to fill palette VRAM.
 */
struct SprFileCmap {
    u32 magic;
    u32 skipsize;
    u32 ncols; // bits 24-27 indicate a palette slot.
};

struct SprFileTile {
    u32 magic;
    u32 skipsize;
    u32 ntiles;
    tileno_t getntiles() {
        return (tileno_t) ntiles;
    }
};

struct SprFileBlock {
  u32 magic;
  u32 skipsize;
  u32 nblocks;  //! bits 24-31 = spriteram number ; bits 0-23 = # blocks
  u16 width;
  u16 height;
};
#endif
